---
title: "YOR visualization"
format: html
editor: visual
---

# Packages

```{r include  = FALSE}
suppressWarnings(source("../functions.R"))
```

# Load data

```{r}
# Load FW model
fw <- readRDS("../../output/model output/fw_slope.RData")

mu <- mean(fw$mu)

data2 <- read.csv("../../data/phenotypes/var_traits_final_YOR.csv")[, c("G", "YOR")] %>% 
  rename_all(~c("G", ".yor")) %>% 
  mutate(.,
         G = str_replace_all(G, " ", "_"), 
         G = str_replace_all(G, "/", "-"), 
         G = str_replace_all(G, "'", ""), 
         G = str_replace_all(G, "SNOWMASS_2.0", "SNOWMASS_2"), 
         G = str_replace_all(G, "BAKER_S_ANN", "BAKERS_ANN"), 
         G = str_replace_all(G, "SMITH_S_GOLD", "SMITHS_GOLD")
         ) %>% 
  # These cultivars don't have marker data
  filter(G %nin% c("AGSECO_7853", "CSU_BLEND09", "JAG,2137", "JEI_110",
                   "KALVESTA", "OK05312", "SY_LLANO","TAM_113","TONKAWA")) %>% 
  drop_na() %>% 
  mutate(.yor = .yor - min(.yor)) %>% 
  left_join(readRDS("../../output/model output/phenotypes_distribution_moments.RData")) %>% 
  mutate(mean = mean+mu)

dataVPT <- read.csv("../../data/phenotypes/dataVPT.csv") %>% 
  full_join(data2, by = join_by(G))
```

# Phenotype v YOR

## Slope of FW regression

```{r}
mod_slope <- readRDS("../../output/model output/model_slope_yor.RData")

newdata <- expand_grid(.yor = seq(min(mod_slope$data$.yor), 
                                  max(mod_slope$data$.yor), 
                                  length.out = 60
                                  )
                        )
# get predictions
preds1 <- add_predicted_draws(mod_slope, 
                             newdata = newdata, value = ".predicted") %>% 
  summarise(.groups = "keep",
            q050 = mean(.predicted), 
            q975 = quantile(.predicted, probs = .975), 
            q025 = quantile(.predicted, probs = 0.025))

p1 <- 
ggplot()+
  

  geom_ribbon(data = preds1, aes(x = .yor+1967,
                                 ymax = q975, ymin = q025), alpha = 0.2)+
  geom_point(data = data2,
             aes(x = .yor+1967, y = slope), alpha = 1, shape = 21, size=3, fill = "white")+
  geom_point(data = data2 %>% 
               filter(slope == min(slope) | slope == max(slope)) %>% 
               mutate(Slope = as.factor(case_when(slope == min(slope) ~ round(slope, 2), T~round(slope, 2)))),
             aes(x = .yor+1967, y = slope, fill = Slope), alpha = 1, shape = 21, size=3)+
  geom_line(data = preds1, aes(x = .yor+1967,
                              y = q050), linewidth = 1)+
  
  scale_x_continuous(breaks = seq(1960, 2030, 10), 
                     limits = c(1965, 2022))+
  scale_fill_manual(values = c(rojo, azul))+
  labs(x = expression("Year of release"), 
       y = expression("Yield phenotypic plasticity")
       )+
  theme_nice()+
  theme(axis.text.x = element_text(size=12))

p1

```

## Quantile 0.975

```{r}
mod_q975 <- readRDS("../../output/model output/model_q975_yor.RData")

# get predictions
preds2 <- add_predicted_draws(mod_q975, 
                             newdata = newdata, value = ".predicted") %>% 
  summarise(.groups = "keep",
            q050 = mean(.predicted), 
            q975 = quantile(.predicted, probs = .975), 
            q025 = quantile(.predicted, probs = 0.025))
```

## Main genotype effect

```{r}
mod_mean <- readRDS("../../output/model output/model_mean_yor.RData")

# get predictions
preds3 <- add_predicted_draws(mod_mean, 
                             newdata = newdata, value = ".predicted") %>% 
  summarise(.groups = "keep",
            q050 = mean(.predicted) + mu, 
            q975 = quantile(.predicted, probs = .975) + mu, 
            q025 = quantile(.predicted, probs = 0.025) + mu)
```

## Quantile 0.05

```{r}
mod_q050 <- readRDS("../../output/model output/model_q050_yor.RData")

# get predictions
preds4 <- add_predicted_draws(mod_q050, 
                             newdata = newdata, value = ".predicted") %>% 
  summarise(.groups = "keep",
            q050 = mean(.predicted), 
            q975 = quantile(.predicted, probs = .975), 
            q025 = quantile(.predicted, probs = 0.025))
```

```{r}
p4 <- 
ggplot()+
  geom_point(data = dataVPT, aes(x = .yor+1967, y = GY), shape = 21, alpha = 0.005, fill = "grey50", size = 2)+
  
  
  geom_ribbon(data = preds2, aes(x = .yor+1967,
                                 ymax = q975, ymin = q025), alpha = 0.2)+
  geom_ribbon(data = preds3, aes(x = .yor+1967,
                                 ymax = q975, ymin = q025), alpha = 0.2)+
  
  geom_ribbon(data = preds4, aes(x = .yor+1967,
                                 ymax = q975, ymin = q025), alpha = 0.2)+
  geom_point(data = data2 %>% 
               pivot_longer(cols = c(q975:mean)),
             aes(x = .yor+1967, y = value, shape = name), alpha = 1,  size=3, fill = "white")+
  
  geom_point(data = data2 %>% 
               pivot_longer(cols = c(q975:mean)) %>% 
               filter(slope == min(slope) | slope == max(slope)) %>% 
               mutate(Slope = as.factor(case_when(slope == min(slope) ~ round(slope, 2), T~round(slope, 2)))),
             aes(x = .yor+1967, y = value, fill = Slope, shape = name), alpha = 1, size=3)+
  
  geom_line(data = preds2, aes(x = .yor+1967,
                              y = q050), linewidth = 1)+

  
  
  geom_line(data = preds3, aes(x = .yor+1967,
                              y = q050), linewidth = 1)+



  geom_line(data = preds4, aes(x = .yor+1967,
                              y = q050), linewidth = 1)+

  scale_y_continuous(limits = c(0,10))+
  scale_x_continuous(breaks = seq(1960, 2030, 10), limits = c(1965, 2030))+
  scale_fill_manual(values = c(rojo, azul))+
  scale_shape_manual(values = c(22,21,24), labels = c("Yield mean", "Yield quantile 0.05", "Yield quantile 0.95"))+
  labs(x = expression("Year of release"), 
       y = expression("Grain yield (Mg"~ha^-1~")")
       )+
  guides(shape = "none")+
  theme_nice()+
  theme(axis.text.x = element_text(size=12))

p4
```

```{r fig.width=12, fig.height = 4}
ph2 <- readRDS("../../output/plots/paper/h2_plot.RData")

pyor <- ggpubr::ggarrange(p1,ph2, nrow = 1, labels = "AUTO", common.legend = T)

ggsave(plot = pyor, "../../output/plots/paper/phenotype_yor.png", width = 8, height = 4)
```
