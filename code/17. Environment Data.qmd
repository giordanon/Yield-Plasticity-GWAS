

```{r}
library(tidyverse)
library(daymetr)
options(dplyr.summarise.inform = FALSE)
library(lubridate)
source("functions.R")
```

# Data

Read 'data' object from 19. Data Other Countries
```{r}
dataEnv <- 
data %>% 
  filter(Region == "Central Great Plains") 

dataEnv <- cbind(dataEnv, reshape2::colsplit(dataEnv$E," ",c("Y", "L")))
```


```{r}
locations <- unique(dataEnv[,c("E1", "Y", "L")]) %>% 
  left_join(read_csv("../data/environment/trials_coordinates.csv"), by = join_by(L))

planting <- read_csv("../data/environment/planting_dates2000_2017.csv")
```

# Weather

Download MESONET data

```{r}
env <- readRDS("../data/environment/weather_daymet.RData")

env <- 
locations[,] %>%
  drop_na(LON) %>% 
  mutate(.,
         Y = as.Date(paste0(Y, "-01-01"), format = "%Y-%m-%d"),
         
         daymet = pmap(list(..1 = LAT, ..2 = LON, ..3 = Y, ..4 = Y+1, ..5 = E1),
         ~download_daymet(site = ..5,
                          lat = ..1,
                          lon = ..2,
                          start = year(..3),
                          end = year(..4),
                          silent = T,
                          internal = TRUE)$data %>% 
           mutate(.,
                  TIMESTAMP = ymd(paste(year, "-01-01"))+yday
                  ) %>% 
           rename_all(~c("YEAR", "DOY", "DL", "PRECIP","SR", "SWE","TEMP2MMAX",  "TEMP2MMIN", "VPDEFAVG", "TIMESTAMP")) %>% 
           mutate(.,
                  # ((srad (W/m2) * dayl (s/day)) / l,000,000)
                  SR = (SR * DL)/1e6
                  ) 
         
         )) %>% 
   mutate(.,
          GENOTYPE = "Def", 
          MATURITY = 0
          ) %>% 
  rename(LOCATION = E1)

saveRDS(env, file = "../data/environment/weather_daymet.RData")

```

Get anthesis dates

```{r}
env <- anthesisDate(env, 0)
```

Get weather summaries

```{r}
df_sum <- weather_summaries(env, tminCP = 4.5, tminGF = 0,
                            minGDU_CP = 300, maxGCU_CP = 100,
                            minGDU_GF = 100, maxGCU_GF = 600) %>% 
  # convert anthesis date to DOY
  mutate(ANTHESIS = yday(ANTHESIS)) %>% 
  rename(E1 = LOCATION) %>% 
  # Remove genotype column because I am using the default
  dplyr::select(-GENOTYPE)
  

saveRDS(df_sum, file = "../data/environment/weather_summaries_daymet.RData")
```

```{r fig.width=25, fig.height=10}
dataVPT %>% 
  group_by(E) %>% 
  summarise(GY = mean(GY)) %>% 
  right_join(df_sum,by = join_by(E)) %>% 
  pivot_longer(cols = c(ANTHESIS:VPD_GF)) %>% 
  ggplot(aes(x = value, y = GY))+
  geom_point(shape = 21, alpha= .1, size=4, fill = "blue")+
  facet_wrap(~name, scales = "free_x", ncol = 5)+
  theme_bw(base_size = 20)
```

```{r}
plot(df_sum$PQ_CP, df_sum$VPD_CP)
```

```{r}
df_pca <- df_sum[,4:13] %>% 
  drop_na() %>% 
  mutate_all(~(.-mean(.))/sqrt(var(.)))
library(factoextra)
mod_pca <- prcomp(df_pca)

fviz_eig(mod_pca,
         addlabels=TRUE)

mod_pca$rotation %>%
  as.data.frame() %>%
  rownames_to_column(var = "var") %>%
  ggplot(aes(x=reorder(var,desc(PC1)), y=PC1))+
  geom_bar(stat="identity", aes(fill=PC1), show.legend = F)+
  scale_fill_gradient(low = "red", high = "blue")+
  theme(axis.text.x = element_text(angle=45, hjust=1))

fviz_contrib(mod_pca, choice = "var", axes = 1)

fviz_pca_var(mod_pca,
             col.var = "contrib", # Color by contributions to the PC
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE     # Avoid text overlapping
             )

```
