


```{r setup, warning=F, message=F}
library(brms)
library(tidyverse)
library(rstan)
library(lme4)
library(emmeans)
library(marginaleffects)
library(tidybayes)
library(multidplyr)
library(quantreg)
# To run stan faster
rstan_options(auto_write = TRUE, silent = TRUE, cachefiles = TRUE)
options(mc.cores = parallel::detectCores())

library(extrafont)
loadfonts(device = c("all", "pdf", "postscript", "win"))
`%nin%` <- Negate(`%in%`)
# Custom ggplot theme to make pretty plots
# Get the font at https://fonts.google.com/specimen/Jost
theme_nice <- function() {
  theme_minimal(base_family = "Jost") +
    theme(panel.grid.minor = element_blank(),
          plot.title = element_text(family = "Jost", face = "bold"),
          axis.title = element_text(family = "Jost Medium"),
          strip.text = element_text(family = "Jost", face = "bold",
                                    size = rel(1), hjust = 0),
          strip.background = element_rect(fill = "grey80", color = NA))
}

data <- read_csv("../data/phenotypes/data_all_countries.csv") 

#mod_gamma <- readRDS("../output/model output/mod_gamma_GxE_BLUPs.RData")
```

```{r}
datatest <- data[data$Region == "Uruguay",]
test <- glmer(GY*1000 ~ 1 + YOR + (1|G1) + (1|E1) + (1|E1:G1),
              data = datatest, 
              family = Gamma(link = "log"), 
              control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 100000))
              )

newdata <- expand.grid(
  G1 = unique(datatest$G1),
  E1 = unique(datatest$E1),
  YOR = seq(min(datatest$YOR), max(datatest$YOR), length.out = 10)  # Adjust length.out as needed
)
test1 <- predict(test, type = "response", re.form = NA, newdata = newdata)


newdata %>% 
  cbind(test1) %>% 
ggplot(aes(x = YOR, y = test1))+
  geom_line()+
  geom_point(data = blup %>% filter(Region == "Uruguay"), aes(x = YOR, y = BLUP))


```


# BLUPS

```{r}
# Load data from data other countries
# Make BLUP depend on YOR and plasticity
mod_gamma <- glmer(GY ~ (1|G1) + (1|E1) + (1|E1:G1) + (1|Region), 
                  data = data, 
                  family = Gamma(link = "log")
                  )

mod_gaussian <- lmer(GY ~ (1|G1) + (1|E1) + (1|E1:G1) + (1|Region),
                     data = data
                     )

# Based on *The AIC the Gamma model performed better compared to the Gaussian
performance::compare_performance(mod_gamma, mod_gaussian, rank = TRUE)

# Variance components
var_comp <- 
as.data.frame(VarCorr(mod_gamma, comp = "vcoc")) %>% 
  dplyr::select(grp, vcov) %>% 
  # this gives the % variance explained by each component
  mutate(vcov = round(vcov,3), 
         # get it in percentage
         vcov = (vcov / sum(vcov))*100
         )
```

# Extract BLUP's

```{r}
blup <- 
data[,c("Region","G1","E1", "YOR","GY", "PP_GY")] %>% 
  left_join(coef(mod_gamma)$G1 %>% 
              rownames_to_column("G1"), 
            by = join_by(G1)) %>%  
  transmute(.,
            Region = Region,
            YOR = YOR,
            G1=G1, 
            BLUP =  exp(as.double(`(Intercept)`))) %>% 
  drop_na(YOR) %>% 
  unique()
```

# Write dataset 2 phenotypes

```{r}
data_all <- 
data[,c("Region","G","G1","E1", "YOR","GY", "PP_GY")] %>% 
  left_join(coef(mod_gamma)$G1 %>% 
              rownames_to_column("G1"), 
            by = join_by(G1)) %>%  
  mutate(.,
         BLUP =  exp(as.double(`(Intercept)`))) %>% 
  select(-`(Intercept)`)

write.csv(data_all, "../data/phenotypes/data_all_countries.csv",row.names = F)
```


# 1. Model BLUPS as affected by YOR

# Upper quantile regression in Argentina

```{r}
pp_arg <- data %>% 
  filter(Region =="Argentina") %>% 
  mutate(YOR = YOR-2000) %>%
  select(YOR, PP_GY) %>% 
  unique()
  

model_arg_PP_GY <- 
brm(bf(PP_GY ~ YOR + I(YOR^2), quantile = 0.90),
    chains = 1,
    iter = 5000, 
    warmup = 2000,
    data = pp_arg, 
    file = "../models/model_arg_PP_GY_YOR",
    family = asym_laplace(link_quantile = "identity", link_sigma = "log")
    )

model_arg_PP_GY <- readRDS("../models/model_arg_PP_GY_YOR.rds")


preds_arg <- 
add_linpred_draws(model_arg_PP_GY, 
                  newdata = data.frame(YOR = pp_arg$YOR) )%>% 
  ungroup() %>% 
  summarise(.by = c("YOR", ".row"), 
          preds = mean(.linpred)) 

preds_arg <- preds_arg$preds

fixef <- fixef(model_arg_PP_GY)[,1]

peak <-round((-fixef[2]/(2*fixef[3]))+2000)



# preds_arg %>% 
# ggplot(aes(x = YOR, y = preds))+
#   geom_line()+
#   geom_point(data = blup %>% 
#                filter(Region =="Argentina") %>% 
#                mutate(YOR = YOR-2000),aes(x = YOR, y = PP_GY) )
```


```{r}
blup <- read_csv("../data/phenotypes/data_all_countries.csv") %>% 
  dplyr::select(Region, BLUP, PP_GY, YOR, G1) %>% 
  unique() %>% 
  drop_na()

mod2 <- blup %>% 
  nest(.by = Region) %>% 
  mutate(.,
         # Association of Yield BLUPs and YOR
         mod2 = map(data, ~glm(BLUP ~  YOR,
                               data = .x, 
                               family = Gamma(link = "log")
                               )
                    ), 
         # Get the slope
         slope2 = map(mod2,~slopes(.x, newdata = datagrid(YOR = c(2022)),
                                  variables = "YOR") %>% 
                       as.data.frame() %>% 
                       dplyr::select(estimate, conf.low, conf.high) %>%
                       rowwise() %>% 
                       mutate(p = case_when(between(0, conf.low, conf.high)~"NS", T~"*"))
                     ), 
         # Get the predictions
         preds2 = map(mod2, ~predict(.x, type = "response")),
         # Generate the label
         label2 = map_chr(slope2, ~case_when(.x$p == "NS"~NA_character_, T~ paste0("slope = ", round(.x$estimate*1000,1), " kg/ha year ", .x$p))),
         preds2 = case_when(is.na(label2)~NA, T~preds2),
         # Association of Yield Plasticity and YOR
         # Linear model
         mod3 = map(data, ~glm(PP_GY ~  YOR,
                               data = .x, 
                               family = Gamma(link = "log")
                               )
                    ), 
         # Get the slope
         slope3 = map(mod3,~slopes(.x, newdata = datagrid(YOR = c(2022)),
                                   variables = "YOR") %>% 
                       as.data.frame() %>% 
                       dplyr::select(estimate, conf.low, conf.high) %>%
                       rowwise() %>% 
                       mutate(p = case_when(between(0, conf.low, conf.high)~"NS", T~"*"))
                     ),
         # Get the predictions
         preds3 = map(mod3, ~predict(.x, type = "response")),
         # Generate the label
         label3 = map_chr(slope3, ~case_when(.x$p == "NS" ~ NA_character_, T~ paste0("slope = ", round(.x$estimate,2), .x$p))), 
         preds3 = case_when(is.na(label3)~NA, T~preds3)
         ) %>% 
  dplyr::select(-c(mod2, mod3))
  

# Add data from Bayesian model Argentina
mod2$preds3[[4]] <- preds_arg
mod2$label3[[4]] <- paste0("peak = ", peak)

dataPlot <- mod2 %>% 
  select(Region, data, preds2, preds3) %>% 
  unnest(cols = c(data, preds2, preds3))


```


```{r fig.width=15, fig.height=3}
# BLUPS and YOR Figure
pblups1 <- 
ggplot()+
  geom_point(data = dataPlot,
             aes(x = YOR,  y = BLUP),
             shape = 21, fill = "#4793AF", alpha = 1, size=3)+
  geom_line(data = dataPlot,
             aes(x = YOR,  y = preds2),
            linewidth = 1.2)+
  geom_text(data = mod2, 
            aes(x = -Inf, 
                y = Inf, 
                label = label2,
                ), family = "Jost",
            hjust = -.05, 
            vjust = 1.2
            )+
  scale_y_continuous(limits = c(2.5, 10))+
  scale_x_continuous(breaks = seq(1960, 2020, 10))+
  labs(x = "Year of Release", y = "Grain Yield BLUP's (Mg / ha)")+
  theme_bw()+
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())+
  facet_wrap(~Region, ncol = 6, scales = "free_x")+
  guides(alpha = "none")+
  theme_nice()+
  theme(panel.spacing = unit(0.8, "lines"))

# Plasticity and YOR figure
pPP <- 
ggplot()+
  geom_point(data = dataPlot,
             aes(x = YOR,  y = PP_GY),
             shape = 21, fill = "#4793AF", alpha = 1, size=3)+
  geom_line(data = dataPlot,
             aes(x = YOR,  y = preds3),
            linewidth = 1.2)+
  geom_text(data = mod2, 
            aes(x = -Inf, 
                y = Inf, 
                label = label3,
                ), family = "Jost",
            hjust = -.05, 
            vjust = 1.2
            )+
  #scale_y_continuous(limits = c(2.5, 5))+
  scale_x_continuous(breaks = seq(1960, 2020, 10))+
  labs(x = "Year of Release", y = "Yield Plasticity (dimensionless)")+
  theme_bw()+
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())+
  facet_wrap(~Region, ncol = 6, scales = "free_x")+
  guides(alpha = "none")+
  theme_nice()+
  theme(panel.spacing = unit(0.8, "lines")
        #plot.background = element_rect(fill = "white")
        )

```


```{r}
mod3q <- lm(PP_GY ~  0 + YOR*I(YOR^2)*Region,
            data = blup)
data_arg_uru <- 
  blup %>% 
  filter(Region %in% c("Argentina", "Uruguay")) %>% 
  mutate(YOR = YOR - min(YOR))

mod3q_bayes <- 
  brm(
 prior = c(## SD hyper parameter for the slope was calculated from Giordano FCR paper
               prior_string("normal(0,2)", nlpar = "B0", lb = 0, ub=2),
               prior_string("normal(0, 2)", nlpar = "B1"), 
              
               prior_string("uniform(0,50)", nlpar = "PC", lb = 0, ub=50)
               #prior_string("gamma(2,1)", class = "sigma", lb = 0)
               ),
   bf(PP_GY ~ B0 + B1 * YOR + (-B1/(2*PC)) * (YOR^2),
      B0 + B1 + PC ~ 0 + Region,
      nl = TRUE),
   chains = 1,
   iter = 5000, 
   warmup = 2000,
   data = data_arg_uru, 
   family = Gamma(link = "log")
   )


hist(blup$YOR-1967)

preds_arg_uru <- 
add_epred_draws(newdata = expand_grid(YOR = seq(min(data_arg_uru$YOR), max(data_arg_uru$YOR), 0.1), 
                                      Region = unique(data_arg_uru$Region)), 
                object = mod3q_bayes) %>% 
  summarise(#.by = c("YOR", "Region"), 
            mean = mean(.epred), 
            ub = quantile(.epred, probs = 0.975), 
            lb = quantile(.epred, probs = 0.025)
            )

as.data.frame(fixef(mod3q_bayes))[5:6,] %>% 
  mutate_all(~.+min(blup[blup$Region %in% c("Argentina", "Uruguay"),"YOR"]))





ggplot(data = blup, aes(x = YOR-1997, y = PP_GY))+
  geom_line(data = preds_arg_uru, aes(x = YOR, y = mean))+
  geom_line(data = preds_arg_uru, aes(x = YOR, y = ub))+
  geom_line(data = preds_arg_uru, aes(x = YOR, y = lb))+

  geom_point(shape = 21, alpha=0.2)+
  facet_wrap(~Region)+
  theme_nice()
```


# 2. Model Yield per se and Plasticity

```{r}
cluster <- new_cluster(6)
cluster_library(cluster, c("dplyr", "purrr", "brms"))

mod3_all <- 
data %>% 
  group_by(Region) %>% 
  nest() %>% 
  multidplyr::partition(cluster) %>% 
  mutate(.,
         model90 = map(data,
                       ~brm(
                         prior = c(## SD hyper parameter for the slope was calculated from Giordano FCR paper
                                 prior_string("normal(1.4, 1)", coef = "PP_GY"),
                                 prior_string("uniform(0,20)", class = "Intercept", lb = 0, ub = 20),
                                 prior_string("gamma(0.01,0.01)", class = "sigma")
                                 ),
                         bf(GY ~ PP_GY, quantile = 0.99),
                         chains = 1,
                         iter = 5000,
                         warmup = 2000,
                         data = .x,
                         family = asym_laplace(link_quantile = "identity", link_sigma = "log")
                         )
                       ),
         model10 = map(data, 
                       ~brm(
                         prior = c(## SD hyper parameter for the slope was calculated from Giordano FCR paper
                                 prior_string("normal(1.4, 1)", coef = "PP_GY"), 
                                 prior_string("uniform(0,20)", class = "Intercept", lb = 0, ub = 20), 
                                 prior_string("gamma(0.01,0.01)", class = "sigma")
                                 ),
                         bf(GY ~ PP_GY, quantile = 0.01),
                         chains = 1,
                         iter = 5000, 
                         warmup = 2000,
                         data = .x, 
                         family = asym_laplace(link_quantile = "identity", link_sigma = "log")
                         )
                       )
         ) %>% 
  dplyr::collect()

saveRDS(mod3_all, "../output/model output/Yieldperse_Plasticity_all.RData")
```

```{r}
qrt <- quantreg::rq(data = data %>% filter(Region == "United Kingdom"), formula = GY ~ PP_GY, tau = 0.9)
summary(qrt)
```


```{r}
predsALD <- 
readRDS("../output/model output/Yieldperse_Plasticity_all.RData") %>% 
  pivot_longer(cols = contains("model"), 
               values_to = "model",
               names_to = "quantile") %>% 
  mutate(quantile = parse_number(quantile)/100) %>% 
  mutate(., 
         preds = pmap(list(..1 = model, ..2 = Region, ..3 = data), 
                      ~add_linpred_draws(..1, 
                                         newdata = data.frame(Region = ..2, PP_GY = seq(min(..3$PP_GY, na.rm=T), max(..3$PP_GY, na.rm=T), 0.01)
                                                              )
                                         ) %>% 
                        ungroup() %>% 
                        summarise(.by = c("PP_GY"), 
                                  preds = mean(.linpred))
                      )
            )

# Get the slope when PP is 1
slope3 <-
  predsALD %>% 
  mutate(.,
        slope = map(model,
                    ~slopes(.x,conf_level = 0.001,
                            newdata = datagrid(PP_GY = c(1),
                                               variables = "PP_GY")
                       ) %>% 
                       as.data.frame() %>% 
                       dplyr::select(PP_GY, estimate, conf.low, conf.high) %>% 
                       mutate(p = case_when(between(0, conf.low, conf.high)~"NS", T~"*"))
                     )
         ) %>% 
  unnest(slope) %>% 
  dplyr::select(-model, -PP_GY) %>% 
  select(-data) %>% 
  unnest(preds) %>% 
  mutate_at(vars(preds,estimate), ~case_when(p == "NS" ~ NA_real_, T~.)) %>% 
  mutate(label = case_when(is.na(preds)~NA_character_, T~ paste0("slope = ", format(round(estimate*1000,0),0), p)), 
         vjust = case_when(quantile == 0.9 ~ 1.2, T~2.3))
```

```{r fig.width=15, fig.height=3}
p3 <- 
ggplot()+
  geom_point(data = data[,c("GY", "Region", "PP_GY")],
             aes(x = PP_GY,  y = GY),
             shape = 21, fill = "#4793AF", alpha = .1, size=3)+
  geom_line(data = slope3[,c("PP_GY","preds", "quantile", "Region")] %>% 
              unnest(preds),
             aes(x = PP_GY,  y = preds, color = as.factor(quantile)),
            linewidth = 1.2)+
  geom_text(data = unique(slope3[,c("Region", "quantile", "label", "vjust")]),
            aes(x = -Inf,
                y = Inf,
                label = label,
                color = as.factor(quantile),
                vjust = vjust
                ), 
            family = "Jost",
            hjust = -.05, 
            show.legend = FALSE
            )+
  scale_linetype_manual(values = c("dashed", "solid"))+
  scale_color_manual(values = c("red4", "#c98612"))+
  labs(x = "Yield Plasticity (dimensionless)", y = "Grain Yield (Mg / ha)")+
  guides(color = guide_legend(title = "Quantile"))+
  theme_bw()+
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())+
  facet_wrap(~Region, ncol = 6, scales = "free_x")+
  guides(alpha = "none")+
  theme_nice()+
  theme(panel.spacing = unit(0.8, "lines"), 
        legend.position = "top")
p3
```


# 3. Model Plasticity and BLUPS

```{r}
pp <- blup %>% 
  full_join(unique(data[, c("PP_GY", "G1")]), by = join_by(G1, PP_GY)) %>% 
  drop_na()

cluster <- new_cluster(6)
cluster_library(cluster, c("dplyr", "purrr", "brms"))

mod4 <- 
pp %>% 
  nest(.by = Region) %>% 
  multidplyr::partition(cluster) %>% 
  mutate(.,
         # Quadratic Plateau
         model1 = map(data,
                      ~brm(
                          # Priors
                          prior = c(
                            # Intercept
                            prior(prior = 'normal(3,3)', nlpar = 'B0',lb = 0),
                            # Slope
                            prior(prior = 'normal(0,3)', nlpar = 'B1'),
                            # AONR
                            prior(prior = 'uniform(0,5)', nlpar = 'YP', lb = 0, ub=5)
                            ),
                          #Formula
                          formula = bf(
                          BLUP ~ (B0 + B1 * PP_GY + -B1/(2*YP) * PP_GY^2 ) * (PP_GY <= YP) + (B0 + B1 * YP + -B1/(2*YP) * YP^2) * (PP_GY > YP),
                          B0 + B1 + YP ~ 1,
                          shape ~ 1,
                          nl = TRUE),
                          family = Gamma(link = 'log'),
                          warmup = 5000, iter = 10000,
                          chains = 1, cores = 1,
                          init_r = 0.1, seed = 1,
                          control = list(adapt_delta = 0.9),
                          data = .x)
                          ),
         # Mitscherlich
         model2 = map(data,
                      ~brm(
                          # Priors
                          prior = c(
                            # Intercept
                            prior(prior = 'normal(3,3)', nlpar = 'A',lb = 0),
                            # Slope
                            prior(prior = 'normal(0,1)', nlpar = 'B'),
                            # AONR
                            prior(prior = 'normal(0,1)', nlpar = 'C')
                            ),
                          #Formula
                          formula = bf(
                          BLUP ~ A * (1-exp(-C*(PP_GY+B))),
                          A + B + C ~ 1,
                          shape = 1,
                          nl = TRUE),
                          family = Gamma(link = 'log'),
                          warmup = 5000, iter = 10000,
                          chains = 1, cores = 1,
                          init_r = 0.1, seed = 1,
                          control = list(adapt_delta = 0.9),
                          data = .x)
                      ),
         # Linear
         model3 = map(data, 
                      ~brm(
                          # Priors
                          prior = c(
                            # Intercept
                            prior(prior = 'normal(3,3)', class = 'Intercept', lb = 0),
                            # Slope
                            prior(prior = 'normal(0,1)', class = 'b'),
                            # Error
                            prior(prior = 'gamma(0.01,0.01)', class = 'shape')
                            ), 
                          #Formula
                          formula = BLUP ~ PP_GY, 
                          family = Gamma(link = 'log'),
                          warmup = 5000, iter = 10000,
                          chains = 1, cores = 1,
                          init_r = 0.1, seed = 1,
                          control = list(adapt_delta = 0.9),
                          data = .x)
                      ), 
         # Select best model
         performance = pmap_chr(list(model1 = model1, model2 = model2, model3 = model3), 
                                function(model1, model2, model3){
                                  perf <- performance::compare_performance(model1, model2, model3, rank = T) %>% 
                                    as.data.frame() %>% 
                                    filter(Performance_Score == max(Performance_Score))
                                  model_sel <- perf$Name
                                  return(model_sel)
                                  }
                                )
         ) %>% 
  dplyr::collect()

saveRDS(mod4, "../output/model output/BLUP_Plasticity_all.RData")
```

## Extract model outcomes 

```{r}
mod4_best <- 
  readRDS("../output/model output/BLUP_Plasticity_all.RData") %>% 
  transmute(.,
            Region = Region,
            model = case_when(Region == "Manitoba"~ model3, T ~ model1),
            preds = pmap(list(..1 = model, ..2 = Region, ..3 = data), 
                      ~add_linpred_draws(..1, 
                                         newdata = data.frame(Region = ..2, PP_GY = seq(min(..3$PP_GY), max(..3$PP_GY), 0.01)
                                                              )
                                         ) %>% 
                        ungroup() %>% 
                        summarise(.by = c("PP_GY"), 
                                  preds = mean(.linpred))
                      )
            ) 

preds4 <- mod4_best %>% 
  dplyr::select(-model) %>% 
  unnest(preds)


# Get the slope when PP is 1
slope4 <-
  mod4_best %>% 
  mutate(.,
         slope = map(model,
                     ~slopes(.x,
                       newdata = datagrid(PP_GY = c(1),
                                          variables = "PP_GY")
                       ) %>% 
                       as.data.frame() %>% 
                       dplyr::select(PP_GY, estimate, conf.low, conf.high) %>% 
                       mutate(p = case_when(between(0, conf.low, conf.high)~"NS", T~"*"))
                     )
         ) %>% 
  unnest(slope) %>% 
  dplyr::select(-model, -PP_GY)

preds4 <- slope4 %>% 
  unnest(preds) %>% 
  mutate_at(vars(preds,estimate), ~case_when(p == "NS" ~ NA_real_, T~.)) %>% 
  mutate(label = case_when(is.na(preds)~NA_character_, T~ paste0("slope = ", format(round(estimate,2),2), p)))
```

## Visualize

```{r fig.width=15, fig.height=3}

p4 <- 
ggplot()+
  geom_point(data = pp,
             aes(x = PP_GY,  y = BLUP),
             shape = 21, fill = "#4793AF", alpha = 1, size=3)+
  geom_line(data = preds4,
             aes(x = PP_GY,  y = exp(preds)),
            linewidth = 1.2)+
  geom_text(data = unique(preds4[, c("Region", "label")]),
            aes(x = -Inf,
                y = Inf,
                label = label,
                ), 
            family = "Jost",
            hjust = -.05,
            vjust = 1.2
            )+
  #scale_y_continuous(limits = c(2.5, 5))+
  #scale_x_continuous(limits = c(0,2))+
  labs(x = "Yield Plasticity (dimensionless)", y = "Grain Yield BLUP's (Mg / ha)")+
  theme_bw()+
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())+
  facet_wrap(~Region, ncol = 6)+
  guides(alpha = "none")+
  theme_nice()+
  theme(panel.spacing = unit(0.8, "lines")
        )

ggsave(plot = p4, "../output/plots/BLUPs - Plasticity.png", width = 15, height = 3)

```


# Arrange figures

## YOR

```{r warning = FALSE, fig.width=15, fig.height=6}
pYOR <- 
  ggpubr::ggarrange(pPP, pblups1, nrow = 2)

ggsave(plot = pYOR, "../output/plots/Year of Release_Plasticity_BLUPs.png", width = 15, height = 6, bg = "white")

```

## Yield per se and Plasticity

```{r warning = FALSE, fig.width=15, fig.height=6}
pYOR <- 
  ggpubr::ggarrange(p3, p4, nrow = 2)

ggsave(plot = pYOR, "../output/plots/Yieldperse and BLUPS.png", width = 15, height = 6, bg = "white")

```



